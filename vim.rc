set t_Co=256

syntax enable

set hidden " for CtrlSpace

set hlsearch
set ignorecase
set smartcase
set incsearch

set scrolloff=17
set colorcolumn=81

set number
set relativenumber

set cursorline
set cursorcolumn

set background=dark
let g:solarized_termcolors=256
let g:solarized_contrast="high"
colorscheme solarized

set laststatus=2
set statusline=%t[%{strlen(&fenc)?&fenc:'none'},%{&ff}]%h%m%r%y%=%c,%l/%L\ %P

execute pathogen#infect()

let g:gitgutter_max_signs=99999

" CtrlSpace
nnoremap <silent><C-p> :CtrlSpace O<CR>
let g:CtrlSpaceLoadLastWorkspaceOnStart = 1
let g:CtrlSpaceSaveWorkspaceOnSwitch = 1
let g:CtrlSpaceSaveWorkspaceOnExit = 1

cnoremap :SW CtrlSpaceSave<CR>

" Ack on visual selection
vnoremap <C-a> y:Ack <C-r>=fnameescape(@")<CR><CR>

" motions in insert mode exit insert mode
inoremap <Down> <Esc><Down>
inoremap <Up> <Esc><Up>
inoremap <Left> <Esc><Left>
inoremap <Right> <Esc><Right>

" change active window
nnoremap <silent><C-S-Up> <C-w>k
nnoremap <silent><C-S-Down> <C-w>j
nnoremap <silent><C-S-Left> <C-w>h
nnoremap <silent><C-S-Right> <C-w>l

" finding motions
nnoremap <silent><A-Up> #
nnoremap <silent><A-Down> *

nnoremap <silent>n /<CR>
nnoremap <silent>N ?<CR>

nnoremap <silent> <C-l> :nohlsearch<CR><C-l>
cnoremap <silent> <C-l> <C-u>nohlsearch<CR><C-l>

" alt motions jumping between functions
nnoremap <silent><A-Left> [[b%0f(:YcmCompleter GoTo<CR>
nnoremap <silent><A-Right> ]]w

" recall older/recent history with matching
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

" alt-shift motions moving the line up/down
nnoremap <A-S-Up> ddkP
nnoremap <A-S-Down> ddp
inoremap <A-S-Up> <Esc>ddkP
inoremap <A-S-Down> <Esc>ddp

" alt-shift motions moving the line left/right
nnoremap <A-S-Left> <<
nnoremap <A-S-Right> >>
inoremap <A-S-Left> <Esc><<
inoremap <A-S-Right> <Esc>>>

nmap z7 :w!<CR>
nmap z1 :qa<CR>
nmap z0 :qa!<CR>

nmap gd :YcmCompleter GoTo<CR>

nnoremap ZU "_

nnoremap ZGD :Gdiff<CR>
nnoremap ZGB :Gblame<CR>

nnoremap ZDL :diffget LO<CR>
nnoremap ZDR :diffget RE<CR>

" diff off/on (unfolded & folded)
nnoremap ZO :diffo<CR>
nnoremap ZR :difft<CR>:diffu<CR>zr
nnoremap ZM :difft<CR>:diffu<CR>zm

cnoremap :WW set textwidth=72<CR>:set syntax=diff<CR>

cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" abbreviations
ab #i #include
ab #d #define
